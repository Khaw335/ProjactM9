{"ast":null,"code":"import data from '../app/data';\n\nconst ProductsReducer = (state = data, action) => {\n  switch (action.type) {\n    case 'FETCH_ALL_PRODUCT':\n      return state;\n\n    case 'ADD_PRODUCT':\n      let id = state.length + 1;\n      let new_product = {\n        id: id,\n        name: action.payload.name,\n        description: action.payload.description,\n        price: action.payload.price,\n        rating: action.payload.rating,\n        imageURL: action.payload.imageURL,\n        quantity: action.payload.quantity\n      };\n      state.push(new_product);\n      return state;\n\n    case 'UPDATE_PRODUCT':\n      const updateindex = state.findIndex(item => item.id === action.payload.id);\n      let updated_product = {\n        id: action.payload.id,\n        name: action.payload.name,\n        description: action.payload.description,\n        price: action.payload.price,\n        rating: action.payload.rating,\n        imageURL: action.payload.imageURL,\n        quantity: action.payload.quantity\n      };\n      state.splice(updateindex, 1);\n      state.push(updated_product);\n      return state;\n\n    case 'DELETE_PRODUCT':\n      const deleteindex = state.findIndex(item => item.id === action.payload);\n      state.splice(deleteindex, 1);\n      return state;\n\n    default:\n      return state;\n  }\n};\n\n_c = ProductsReducer;\nexport default ProductsReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductsReducer\");","map":{"version":3,"sources":["D:/Code/Group_Project_Fronted/react-app/src/reducers/product.js"],"names":["data","ProductsReducer","state","action","type","id","length","new_product","name","payload","description","price","rating","imageURL","quantity","push","updateindex","findIndex","item","updated_product","splice","deleteindex"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,aAAjB;;AAEA,MAAMC,eAAe,GAAG,CAACC,KAAK,GAAGF,IAAT,EAAcG,MAAd,KAAyB;AAC7C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,mBAAL;AACI,aAAOF,KAAP;;AACJ,SAAK,aAAL;AACI,UAAIG,EAAE,GAAGH,KAAK,CAACI,MAAN,GAAe,CAAxB;AACA,UAAIC,WAAW,GAAG;AACdF,QAAAA,EAAE,EAACA,EADW;AAEdG,QAAAA,IAAI,EAACL,MAAM,CAACM,OAAP,CAAeD,IAFN;AAGdE,QAAAA,WAAW,EAACP,MAAM,CAACM,OAAP,CAAeC,WAHb;AAIdC,QAAAA,KAAK,EAACR,MAAM,CAACM,OAAP,CAAeE,KAJP;AAKdC,QAAAA,MAAM,EAACT,MAAM,CAACM,OAAP,CAAeG,MALR;AAMdC,QAAAA,QAAQ,EAACV,MAAM,CAACM,OAAP,CAAeI,QANV;AAOdC,QAAAA,QAAQ,EAACX,MAAM,CAACM,OAAP,CAAeK;AAPV,OAAlB;AASAZ,MAAAA,KAAK,CAACa,IAAN,CAAWR,WAAX;AACA,aAAOL,KAAP;;AACJ,SAAK,gBAAL;AACI,YAAMc,WAAW,GAAGd,KAAK,CAACe,SAAN,CACfC,IAAD,IAAUA,IAAI,CAACb,EAAL,KAAYF,MAAM,CAACM,OAAP,CAAeJ,EADrB,CAApB;AAGA,UAAIc,eAAe,GAAG;AAClBd,QAAAA,EAAE,EAACF,MAAM,CAACM,OAAP,CAAeJ,EADA;AAElBG,QAAAA,IAAI,EAACL,MAAM,CAACM,OAAP,CAAeD,IAFF;AAGlBE,QAAAA,WAAW,EAACP,MAAM,CAACM,OAAP,CAAeC,WAHT;AAIlBC,QAAAA,KAAK,EAACR,MAAM,CAACM,OAAP,CAAeE,KAJH;AAKlBC,QAAAA,MAAM,EAACT,MAAM,CAACM,OAAP,CAAeG,MALJ;AAMlBC,QAAAA,QAAQ,EAACV,MAAM,CAACM,OAAP,CAAeI,QANN;AAOlBC,QAAAA,QAAQ,EAACX,MAAM,CAACM,OAAP,CAAeK;AAPN,OAAtB;AASAZ,MAAAA,KAAK,CAACkB,MAAN,CAAaJ,WAAb,EAAyB,CAAzB;AACAd,MAAAA,KAAK,CAACa,IAAN,CAAWI,eAAX;AACA,aAAOjB,KAAP;;AACJ,SAAK,gBAAL;AACI,YAAMmB,WAAW,GAAGnB,KAAK,CAACe,SAAN,CACfC,IAAD,IAAUA,IAAI,CAACb,EAAL,KAAYF,MAAM,CAACM,OADb,CAApB;AAGAP,MAAAA,KAAK,CAACkB,MAAN,CAAaC,WAAb,EAA0B,CAA1B;AACA,aAAOnB,KAAP;;AACJ;AACI,aAAOA,KAAP;AAvCR;AAyCH,CA1CD;;KAAMD,e;AA4CN,eAAeA,eAAf","sourcesContent":["import data from '../app/data'\r\n\r\nconst ProductsReducer = (state = data,action) => {\r\n    switch(action.type){\r\n        case 'FETCH_ALL_PRODUCT':\r\n            return state\r\n        case 'ADD_PRODUCT':\r\n            let id = state.length + 1\r\n            let new_product = {\r\n                id:id,\r\n                name:action.payload.name,\r\n                description:action.payload.description,\r\n                price:action.payload.price,\r\n                rating:action.payload.rating,\r\n                imageURL:action.payload.imageURL,\r\n                quantity:action.payload.quantity\r\n            }\r\n            state.push(new_product)\r\n            return state\r\n        case 'UPDATE_PRODUCT':\r\n            const updateindex = state.findIndex(\r\n                (item) => item.id === action.payload.id\r\n            )\r\n            let updated_product = {\r\n                id:action.payload.id,\r\n                name:action.payload.name,\r\n                description:action.payload.description,\r\n                price:action.payload.price,\r\n                rating:action.payload.rating,\r\n                imageURL:action.payload.imageURL,\r\n                quantity:action.payload.quantity\r\n            }\r\n            state.splice(updateindex,1)\r\n            state.push(updated_product)\r\n            return state\r\n        case 'DELETE_PRODUCT':\r\n            const deleteindex = state.findIndex(\r\n                (item) => item.id === action.payload\r\n            );\r\n            state.splice(deleteindex, 1);\r\n            return state\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default ProductsReducer"]},"metadata":{},"sourceType":"module"}