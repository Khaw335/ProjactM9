{"ast":null,"code":"var _s = $RefreshSig$();\n\nconst CustomersReducer = (state = [], action) => {\n  _s();\n\n  const dispatch = useDispatch();\n\n  switch (action.type) {\n    case 'REGISTER':\n      state.push(action.payload);\n      return state;\n\n    case 'LOGIN':\n      const customerindex = state.findIndex(user => user.username = action.payload.username);\n\n      if (customerindex < 0) {\n        alert('Username Not Found');\n        return state;\n      } else {\n        if (state[customerindex].password = action.payload.password) {\n          alert('Login Success');\n          return state;\n        } else {\n          alert('Incorrect Password');\n          return state;\n        }\n      }\n\n    default:\n      return [];\n  }\n};\n\n_s(CustomersReducer, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", true);\n\n_c = CustomersReducer;\nexport default CustomersReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomersReducer\");","map":{"version":3,"sources":["D:/Code/Group_Project_Fronted/react-app/src/reducers/customer.js"],"names":["CustomersReducer","state","action","dispatch","useDispatch","type","push","payload","customerindex","findIndex","user","username","alert","password"],"mappings":";;AAAA,MAAMA,gBAAgB,GAAG,CAACC,KAAK,GAAG,EAAT,EAAYC,MAAZ,KAAuB;AAAA;;AAC5C,QAAMC,QAAQ,GAAGC,WAAW,EAA5B;;AACA,UAAOF,MAAM,CAACG,IAAd;AACI,SAAK,UAAL;AACQJ,MAAAA,KAAK,CAACK,IAAN,CAAWJ,MAAM,CAACK,OAAlB;AACJ,aAAON,KAAP;;AACJ,SAAK,OAAL;AACQ,YAAMO,aAAa,GAAGP,KAAK,CAACQ,SAAN,CACjBC,IAAD,IAAUA,IAAI,CAACC,QAAL,GAAgBT,MAAM,CAACK,OAAP,CAAeI,QADvB,CAAtB;;AAGA,UAAGH,aAAa,GAAC,CAAjB,EAAmB;AACfI,QAAAA,KAAK,CAAC,oBAAD,CAAL;AACA,eAAOX,KAAP;AACH,OAHD,MAGK;AACD,YAAGA,KAAK,CAACO,aAAD,CAAL,CAAqBK,QAArB,GAA8BX,MAAM,CAACK,OAAP,CAAeM,QAAhD,EAAyD;AACrDD,UAAAA,KAAK,CAAC,eAAD,CAAL;AACA,iBAAOX,KAAP;AACH,SAHD,MAGK;AACDW,UAAAA,KAAK,CAAC,oBAAD,CAAL;AACA,iBAAOX,KAAP;AACH;AACJ;;AACT;AACI,aAAO,EAAP;AArBR;AAuBH,CAzBD;;GAAMD,gB;;KAAAA,gB;AA2BN,eAAeA,gBAAf","sourcesContent":["const CustomersReducer = (state = [],action) => {\r\n    const dispatch = useDispatch()\r\n    switch(action.type){\r\n        case 'REGISTER':\r\n                state.push(action.payload)\r\n            return state\r\n        case 'LOGIN':\r\n                const customerindex = state.findIndex(\r\n                    (user) => user.username = action.payload.username\r\n                );\r\n                if(customerindex<0){\r\n                    alert('Username Not Found')\r\n                    return state\r\n                }else{\r\n                    if(state[customerindex].password=action.payload.password){\r\n                        alert('Login Success')\r\n                        return state\r\n                    }else{\r\n                        alert('Incorrect Password')\r\n                        return state\r\n                    }\r\n                }\r\n        default:\r\n            return []\r\n    }\r\n}\r\n\r\nexport default CustomersReducer"]},"metadata":{},"sourceType":"module"}