{"ast":null,"code":"const CustomersReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'REGISTER':\n      state.push(action.payload);\n      return state;\n\n    case 'LOGIN':\n      const customerindex = state.findIndex(user => user.username === action.payload.username);\n\n      if (customerindex === null || customerindex === undefined || customerindex < 0) {\n        alert('Username Not Found');\n      } else {\n        if (state[customerindex].password === action.payload.password) {\n          alert('Login Success');\n          state[c];\n          return state;\n        } else {\n          alert('Incorrect Password');\n        }\n      }\n\n    default:\n      return state;\n  }\n};\n\n_c = CustomersReducer;\nexport default CustomersReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomersReducer\");","map":{"version":3,"sources":["D:/Code/Group_Project_Fronted/react-app/src/reducers/customer.js"],"names":["CustomersReducer","state","action","type","push","payload","customerindex","findIndex","user","username","undefined","alert","password","c"],"mappings":"AAAA,MAAMA,gBAAgB,GAAG,CAACC,KAAK,GAAG,EAAT,EAAYC,MAAZ,KAAuB;AAC5C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,UAAL;AACQF,MAAAA,KAAK,CAACG,IAAN,CAAWF,MAAM,CAACG,OAAlB;AACJ,aAAOJ,KAAP;;AACJ,SAAK,OAAL;AACQ,YAAMK,aAAa,GAAGL,KAAK,CAACM,SAAN,CACjBC,IAAD,IAAUA,IAAI,CAACC,QAAL,KAAkBP,MAAM,CAACG,OAAP,CAAeI,QADzB,CAAtB;;AAGA,UAAGH,aAAa,KAAG,IAAhB,IAAsBA,aAAa,KAAGI,SAAtC,IAAiDJ,aAAa,GAAC,CAAlE,EAAoE;AAChEK,QAAAA,KAAK,CAAC,oBAAD,CAAL;AACH,OAFD,MAEK;AACD,YAAGV,KAAK,CAACK,aAAD,CAAL,CAAqBM,QAArB,KAAgCV,MAAM,CAACG,OAAP,CAAeO,QAAlD,EAA2D;AACvDD,UAAAA,KAAK,CAAC,eAAD,CAAL;AACAV,UAAAA,KAAK,CAACY,CAAD,CAAL;AACA,iBAAOZ,KAAP;AACH,SAJD,MAIK;AACDU,UAAAA,KAAK,CAAC,oBAAD,CAAL;AACH;AACJ;;AACT;AACI,aAAOV,KAAP;AApBR;AAsBH,CAvBD;;KAAMD,gB;AAyBN,eAAeA,gBAAf","sourcesContent":["const CustomersReducer = (state = [],action) => {\r\n    switch(action.type){\r\n        case 'REGISTER':\r\n                state.push(action.payload)\r\n            return state\r\n        case 'LOGIN':\r\n                const customerindex = state.findIndex(\r\n                    (user) => user.username === action.payload.username\r\n                );\r\n                if(customerindex===null||customerindex===undefined||customerindex<0){\r\n                    alert('Username Not Found')\r\n                }else{\r\n                    if(state[customerindex].password===action.payload.password){\r\n                        alert('Login Success')\r\n                        state[c]\r\n                        return state\r\n                    }else{\r\n                        alert('Incorrect Password')\r\n                    }\r\n                }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default CustomersReducer"]},"metadata":{},"sourceType":"module"}