{"ast":null,"code":"import { useDispatch, useSelector } from \"react-redux\";\n\nconst CustomersReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'REGISTER':\n      state.push(action.payload);\n      return state;\n\n    case 'LOGIN':\n      const customerindex = state.findIndex(user => user.username = action.payload.username);\n\n      if (customerindex < 0) {\n        alert('Username Not Found');\n        return state;\n      } else {\n        if (state[customerindex].password = action.payload.password) {\n          alert('Login Success');\n          return state;\n        } else {\n          alert('Incorrect Password');\n          return state;\n        }\n      }\n\n    default:\n      return [];\n  }\n};\n\n_c = CustomersReducer;\nexport default CustomersReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomersReducer\");","map":{"version":3,"sources":["D:/Code/Group_Project_Fronted/react-app/src/reducers/customer.js"],"names":["useDispatch","useSelector","CustomersReducer","state","action","type","push","payload","customerindex","findIndex","user","username","alert","password"],"mappings":"AAAA,SAASA,WAAT,EAAuBC,WAAvB,QAA0C,aAA1C;;AAEA,MAAMC,gBAAgB,GAAG,CAACC,KAAK,GAAG,EAAT,EAAYC,MAAZ,KAAuB;AAC5C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,UAAL;AACQF,MAAAA,KAAK,CAACG,IAAN,CAAWF,MAAM,CAACG,OAAlB;AACJ,aAAOJ,KAAP;;AACJ,SAAK,OAAL;AACQ,YAAMK,aAAa,GAAGL,KAAK,CAACM,SAAN,CACjBC,IAAD,IAAUA,IAAI,CAACC,QAAL,GAAgBP,MAAM,CAACG,OAAP,CAAeI,QADvB,CAAtB;;AAGA,UAAGH,aAAa,GAAC,CAAjB,EAAmB;AACfI,QAAAA,KAAK,CAAC,oBAAD,CAAL;AACA,eAAOT,KAAP;AACH,OAHD,MAGK;AACD,YAAGA,KAAK,CAACK,aAAD,CAAL,CAAqBK,QAArB,GAA8BT,MAAM,CAACG,OAAP,CAAeM,QAAhD,EAAyD;AACrDD,UAAAA,KAAK,CAAC,eAAD,CAAL;AACA,iBAAOT,KAAP;AACH,SAHD,MAGK;AACDS,UAAAA,KAAK,CAAC,oBAAD,CAAL;AACA,iBAAOT,KAAP;AACH;AACJ;;AACT;AACI,aAAO,EAAP;AArBR;AAuBH,CAxBD;;KAAMD,gB;AA0BN,eAAeA,gBAAf","sourcesContent":["import { useDispatch , useSelector } from \"react-redux\";\r\n\r\nconst CustomersReducer = (state = [],action) => {\r\n    switch(action.type){\r\n        case 'REGISTER':\r\n                state.push(action.payload)\r\n            return state\r\n        case 'LOGIN':\r\n                const customerindex = state.findIndex(\r\n                    (user) => user.username = action.payload.username\r\n                );\r\n                if(customerindex<0){\r\n                    alert('Username Not Found')\r\n                    return state\r\n                }else{\r\n                    if(state[customerindex].password=action.payload.password){\r\n                        alert('Login Success')\r\n                        return state\r\n                    }else{\r\n                        alert('Incorrect Password')\r\n                        return state\r\n                    }\r\n                }\r\n        default:\r\n            return []\r\n    }\r\n}\r\n\r\nexport default CustomersReducer"]},"metadata":{},"sourceType":"module"}